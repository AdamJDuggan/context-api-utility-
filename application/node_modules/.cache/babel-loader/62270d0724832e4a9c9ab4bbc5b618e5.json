{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimplePending = (...actions) => {\n  _s();\n\n  const {\n    pending\n  } = useContext(GlobalContext);\n  const matchedPending = [];\n\n  if (!actions.length) {\n    pending.map(error => matchedPending.push(error));\n  } else {\n    actions.map(action => {\n      if (!action.split(\"_\")[1]) {\n        pending.find(error => {\n          if (error.split(\"_\")[0] === action.split(\"_\")[0] && !matchedPending.includes(error)) {\n            matchedPending.push(error);\n          }\n        });\n      } else {\n        pending.map(error => {\n          if (error === action && !matchedPending.includes(error)) matchedPending.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedPending.length) return matchedPending;else {\n    return null;\n  }\n};\n\n_s(useSimplePending, \"IfcnZfm9IJFEw1KCvrg1mtyU/aM=\");\n\nexport default useSimplePending;","map":{"version":3,"sources":["/home/adam/Desktop/context-api/application/src/simple-context-state/use-simple-pending.js"],"names":["React","useContext","GlobalContext","useSimplePending","actions","pending","matchedPending","length","map","error","push","action","split","find","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC,GAAGC,OAAJ,KAAgB;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,UAAU,CAACC,aAAD,CAA9B;AACA,QAAMI,cAAc,GAAG,EAAvB;;AACA,MAAI,CAACF,OAAO,CAACG,MAAb,EAAqB;AACnBF,IAAAA,OAAO,CAACG,GAAR,CAAaC,KAAD,IAAWH,cAAc,CAACI,IAAf,CAAoBD,KAApB,CAAvB;AACD,GAFD,MAEO;AACLL,IAAAA,OAAO,CAACI,GAAR,CAAaG,MAAD,IAAY;AACtB,UAAI,CAACA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAL,EAA2B;AACzBP,QAAAA,OAAO,CAACQ,IAAR,CAAcJ,KAAD,IAAW;AACtB,cACEA,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,MAAwBD,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAxB,IACA,CAACN,cAAc,CAACQ,QAAf,CAAwBL,KAAxB,CAFH,EAGE;AACAH,YAAAA,cAAc,CAACI,IAAf,CAAoBD,KAApB;AACD;AACF,SAPD;AAQD,OATD,MASO;AACLJ,QAAAA,OAAO,CAACG,GAAR,CAAaC,KAAD,IAAW;AACrB,cAAIA,KAAK,KAAKE,MAAV,IAAoB,CAACL,cAAc,CAACQ,QAAf,CAAwBL,KAAxB,CAAzB,EACEH,cAAc,CAACI,IAAf,CAAoBD,KAApB;AACH,SAHD;AAID;AACF,KAhBD;AAiBD;;AAED,MAAIH,cAAc,CAACC,MAAnB,EAA2B,OAAOD,cAAP,CAA3B,KACK;AACH,WAAO,IAAP;AACD;AACF,CA7BD;;GAAMH,gB;;AA+BN,eAAeA,gBAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimplePending = (...actions) => {\n  const { pending } = useContext(GlobalContext);\n  const matchedPending = [];\n  if (!actions.length) {\n    pending.map((error) => matchedPending.push(error));\n  } else {\n    actions.map((action) => {\n      if (!action.split(\"_\")[1]) {\n        pending.find((error) => {\n          if (\n            error.split(\"_\")[0] === action.split(\"_\")[0] &&\n            !matchedPending.includes(error)\n          ) {\n            matchedPending.push(error);\n          }\n        });\n      } else {\n        pending.map((error) => {\n          if (error === action && !matchedPending.includes(error))\n            matchedPending.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedPending.length) return matchedPending;\n  else {\n    return null;\n  }\n};\n\nexport default useSimplePending;\n"]},"metadata":{},"sourceType":"module"}