{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimpleErrors = (...actions) => {\n  _s();\n\n  const {\n    errors\n  } = useContext(GlobalContext);\n  const matchedErrors = [];\n\n  if (!actions.length) {\n    errors.map(error => matchedErrors.push(error));\n  } else {\n    actions.map(action => {\n      if (!action.split(\"_\")[1]) {\n        console.log(action.split(\"_\")[0]);\n        errors.find(error => {\n          if (error.type.split(\"_\")[0] === action.split(\"_\")[0] && !matchedErrors.includes(error)) {\n            matchedErrors.push(error);\n          }\n        });\n      } else {\n        errors.map(error => {\n          if (error.type === action && !matchedErrors.includes(error)) matchedErrors.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedErrors.length) return matchedErrors;else {\n    return null;\n  }\n};\n\n_s(useSimpleErrors, \"iB7xBTD5Xxa57tB8Y43tQxRSYPU=\");\n\nexport default useSimpleErrors;","map":{"version":3,"sources":["/home/adam/Desktop/simpleContextState/simple-context-state/application/src/package/use-simple-errors.js"],"names":["React","useContext","GlobalContext","useSimpleErrors","actions","errors","matchedErrors","length","map","error","push","action","split","console","log","find","type","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,eAAe,GAAG,CAAC,GAAGC,OAAJ,KAAgB;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,UAAU,CAACC,aAAD,CAA7B;AACA,QAAMI,aAAa,GAAG,EAAtB;;AACA,MAAI,CAACF,OAAO,CAACG,MAAb,EAAqB;AACnBF,IAAAA,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAWH,aAAa,CAACI,IAAd,CAAmBD,KAAnB,CAAtB;AACD,GAFD,MAEO;AACLL,IAAAA,OAAO,CAACI,GAAR,CAAaG,MAAD,IAAY;AACtB,UAAI,CAACA,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAL,EAA2B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAZ;AACAP,QAAAA,MAAM,CAACU,IAAP,CAAaN,KAAD,IAAW;AACrB,cACEA,KAAK,CAACO,IAAN,CAAWJ,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,MAA6BD,MAAM,CAACC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAA7B,IACA,CAACN,aAAa,CAACW,QAAd,CAAuBR,KAAvB,CAFH,EAGE;AACAH,YAAAA,aAAa,CAACI,IAAd,CAAmBD,KAAnB;AACD;AACF,SAPD;AAQD,OAVD,MAUO;AACLJ,QAAAA,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACpB,cAAIA,KAAK,CAACO,IAAN,KAAeL,MAAf,IAAyB,CAACL,aAAa,CAACW,QAAd,CAAuBR,KAAvB,CAA9B,EACEH,aAAa,CAACI,IAAd,CAAmBD,KAAnB;AACH,SAHD;AAID;AACF,KAjBD;AAkBD;;AAED,MAAIH,aAAa,CAACC,MAAlB,EAA0B,OAAOD,aAAP,CAA1B,KACK;AACH,WAAO,IAAP;AACD;AACF,CA9BD;;GAAMH,e;;AAgCN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimpleErrors = (...actions) => {\n  const { errors } = useContext(GlobalContext);\n  const matchedErrors = [];\n  if (!actions.length) {\n    errors.map((error) => matchedErrors.push(error));\n  } else {\n    actions.map((action) => {\n      if (!action.split(\"_\")[1]) {\n        console.log(action.split(\"_\")[0]);\n        errors.find((error) => {\n          if (\n            error.type.split(\"_\")[0] === action.split(\"_\")[0] &&\n            !matchedErrors.includes(error)\n          ) {\n            matchedErrors.push(error);\n          }\n        });\n      } else {\n        errors.map((error) => {\n          if (error.type === action && !matchedErrors.includes(error))\n            matchedErrors.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedErrors.length) return matchedErrors;\n  else {\n    return null;\n  }\n};\n\nexport default useSimpleErrors;\n"]},"metadata":{},"sourceType":"module"}