[{"/home/adam/Desktop/context-api/src/index.js":"1","/home/adam/Desktop/context-api/src/reportWebVitals.js":"2","/home/adam/Desktop/context-api/src/App.js":"3","/home/adam/Desktop/context-api/src/stores/TodosStore.js":"4","/home/adam/Desktop/context-api/src/stores/ConsolesStore.js":"5","/home/adam/Desktop/context-api/src/components/Consoles.js":"6","/home/adam/Desktop/context-api/src/components/Todos.js":"7","/home/adam/Desktop/context-api/src/simple-state/use-simple-state.js":"8","/home/adam/Desktop/context-api/src/simple-state/use-simple-errors.js":"9","/home/adam/Desktop/context-api/src/simple-state/use-simple-provider.js":"10","/home/adam/Desktop/context-api/src/simple-state/use-simple-pending.js":"11","/home/adam/Desktop/context-api/src/components/Pending.js":"12","/home/adam/Desktop/context-api/src/components/Errors.js":"13","/home/adam/Desktop/context-api/src/simple-state/index.js":"14"},{"size":478,"mtime":1611920394279,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609762983182,"results":"17","hashOfConfig":"16"},{"size":666,"mtime":1611920492289,"results":"18","hashOfConfig":"16"},{"size":830,"mtime":1611849038875,"results":"19","hashOfConfig":"16"},{"size":240,"mtime":1611252182161,"results":"20","hashOfConfig":"16"},{"size":397,"mtime":1611920447128,"results":"21","hashOfConfig":"16"},{"size":540,"mtime":1611920440704,"results":"22","hashOfConfig":"16"},{"size":220,"mtime":1611847195956,"results":"23","hashOfConfig":"16"},{"size":954,"mtime":1611572356104,"results":"24","hashOfConfig":"16"},{"size":3156,"mtime":1611849061487,"results":"25","hashOfConfig":"16"},{"size":915,"mtime":1611572348244,"results":"26","hashOfConfig":"16"},{"size":312,"mtime":1611838449713,"results":"27","hashOfConfig":"16"},{"size":438,"mtime":1611920445256,"results":"28","hashOfConfig":"16"},{"size":321,"mtime":1611581125834,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h5ierx",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/adam/Desktop/context-api/src/index.js",[],"/home/adam/Desktop/context-api/src/reportWebVitals.js",[],["65","66"],"/home/adam/Desktop/context-api/src/App.js",["67"],"/home/adam/Desktop/context-api/src/stores/TodosStore.js",[],["68","69"],"/home/adam/Desktop/context-api/src/stores/ConsolesStore.js",[],"/home/adam/Desktop/context-api/src/components/Consoles.js",[],"/home/adam/Desktop/context-api/src/components/Todos.js",[],"/home/adam/Desktop/context-api/src/simple-state/use-simple-state.js",["70"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nfunction useSimpleState() {\n  const state = useContext(GlobalContext);\n  return state;\n}\n\nexport default useSimpleState;\n","/home/adam/Desktop/context-api/src/simple-state/use-simple-errors.js",["71","72","73","74"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimpleErrors = (...actions) => {\n  const { errors } = useContext(GlobalContext);\n  const matchedErrors = [];\n  if (!actions.length) {\n    errors.map((error) => matchedErrors.push(error));\n  } else {\n    actions.map((action) => {\n      if (!action.split(\"_\")[1]) {\n        console.log(action.split(\"_\")[0]);\n        errors.find((error) => {\n          if (\n            error.type.split(\"_\")[0] === action.split(\"_\")[0] &&\n            !matchedErrors.includes(error)\n          ) {\n            matchedErrors.push(error);\n          }\n        });\n      } else {\n        errors.map((error) => {\n          if (error.type === action && !matchedErrors.includes(error))\n            matchedErrors.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedErrors.length) return matchedErrors;\n  else {\n    return null;\n  }\n};\n\nexport default useSimpleErrors;\n","/home/adam/Desktop/context-api/src/simple-state/use-simple-provider.js",["75","76"],"import React, { createContext, useReducer } from \"react\";\nimport { ContextDevTool } from \"react-context-devtool\";\n\n// Initial state\nconst stores = {\n  errors: [],\n  pending: [],\n};\n\n/** PROVIDER CONTEXT */\nexport const SimpleProvider = ({ ...root }) => {\n  const AppReducer = (state, action) => {\n    if (action.type) return action.payload;\n    else return state;\n  };\n\n  const [state, dispatch] = useReducer(AppReducer, stores);\n\n  root.stores.map((store) => (stores[store.name] = store.initialState));\n\n  const addPending = (type) => {\n    const actionPending = state.pending.find((action) => action === type);\n    if (!actionPending) {\n      const newState = {\n        ...state,\n        pending: [...state.pending, type],\n      };\n      dispatch({\n        type: `${type}/pending`,\n        payload: newState,\n      });\n    }\n  };\n  const addError = (type, message) => {\n    const pending = state.pending.filter((action) => action !== type);\n    const newState = {\n      ...state,\n      pending,\n      errors: [...state.errors, { type, message: message.toString() }],\n    };\n    dispatch({\n      type: `${type}/error`,\n      payload: newState,\n    });\n  };\n\n  const errors_clear = (...errors) => {\n    let newErrors = [];\n    if (!errors.length) {\n      const newState = {\n        ...state,\n        errors: newErrors,\n      };\n      dispatch({\n        type: `clearAllErrors`,\n        payload: newState,\n      });\n    }\n  };\n\n  const dispatchAction = (type, store, payload) => {\n    const errors = state.errors.filter((error) => error.type !== type);\n    const pending = state.pending.filter((action) => action !== type);\n    dispatch({\n      type,\n      payload: {\n        ...state,\n        errors,\n        pending,\n        [store.name]: payload,\n      },\n    });\n  };\n\n  const actions = { errors_clear };\n\n  root.stores.map((store) => {\n    if (store.actions) {\n      for (const [key, value] of Object.entries(store.actions)) {\n        const type = `${store.name}_${key}`;\n        const action = value(state[store.name]);\n        const invoke = action();\n        if (invoke.constructor.name === \"AsyncFunction\") {\n          actions[type] = async (data) => {\n            addPending(type);\n            try {\n              const response = await action(data);\n              const payload = await response();\n              dispatchAction(type, store, payload);\n            } catch (err) {\n              addError(type, err);\n            }\n          };\n        } else {\n          actions[type] = (payload) =>\n            dispatchAction(type, store, action(payload));\n        }\n      }\n    }\n  });\n\n  //Create an array which will be an object of each store and its state\n  const globalStore = {};\n\n  for (const [key, value] of Object.entries(stores)) {\n    globalStore[key] = state[key];\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        ...actions,\n        ...globalStore,\n      }}\n    >\n      {root.component}\n      <ContextDevTool\n        context={GlobalContext}\n        id=\"simpleState\"\n        displayName=\"Simple State\"\n      />\n    </GlobalContext.Provider>\n  );\n};\n\n// Create context\nexport const GlobalContext = createContext(stores);\n","/home/adam/Desktop/context-api/src/simple-state/use-simple-pending.js",["77","78","79","80"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"./use-simple-provider\";\n\nconst useSimplePending = (...actions) => {\n  const { pending } = useContext(GlobalContext);\n  const matchedPending = [];\n  if (!actions.length) {\n    pending.map((error) => matchedPending.push(error));\n  } else {\n    actions.map((action) => {\n      if (!action.split(\"_\")[1]) {\n        pending.find((error) => {\n          if (\n            error.split(\"_\")[0] === action.split(\"_\")[0] &&\n            !matchedPending.includes(error)\n          ) {\n            matchedPending.push(error);\n          }\n        });\n      } else {\n        pending.map((error) => {\n          if (error === action && !matchedPending.includes(error))\n            matchedPending.push(error);\n        });\n      }\n    });\n  }\n\n  if (matchedPending.length) return matchedPending;\n  else {\n    return null;\n  }\n};\n\nexport default useSimplePending;\n","/home/adam/Desktop/context-api/src/components/Pending.js",["81","82"],"import React from \"react\";\n//import { useSimpleState } from \"simple-context-state\";\nimport { useSimpleState } from \"../simple-state\";\n\nfunction Pending() {\n  //Todos Store\n  const { todos, todos_addAsync } = useSimpleState();\n\n  return <div className=\"pendingComponent\">Loading</div>;\n}\n\nexport default Pending;\n","/home/adam/Desktop/context-api/src/components/Errors.js",[],"/home/adam/Desktop/context-api/src/simple-state/index.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":16},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","severity":1,"message":"93","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"93","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":10,"column":26,"nodeType":"96","messageId":"97","endLine":10,"endColumn":28},{"ruleId":"94","severity":1,"message":"98","line":13,"column":29,"nodeType":"96","messageId":"97","endLine":13,"endColumn":31},{"ruleId":"94","severity":1,"message":"95","line":22,"column":28,"nodeType":"96","messageId":"97","endLine":22,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":77,"column":27,"nodeType":"96","messageId":"97","endLine":77,"endColumn":29},{"ruleId":"87","severity":1,"message":"99","line":105,"column":20,"nodeType":"89","messageId":"90","endLine":105,"endColumn":25},{"ruleId":"87","severity":1,"message":"93","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":10,"column":26,"nodeType":"96","messageId":"97","endLine":10,"endColumn":28},{"ruleId":"94","severity":1,"message":"98","line":12,"column":30,"nodeType":"96","messageId":"97","endLine":12,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":21,"column":29,"nodeType":"96","messageId":"97","endLine":21,"endColumn":31},{"ruleId":"87","severity":1,"message":"100","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"101","line":7,"column":18,"nodeType":"89","messageId":"90","endLine":7,"endColumn":32},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Consoles' is defined but never used.","Identifier","unusedVar",["102"],["103"],"'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.find() expects a return value from arrow function.","'value' is assigned a value but never used.","'todos' is assigned a value but never used.","'todos_addAsync' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]